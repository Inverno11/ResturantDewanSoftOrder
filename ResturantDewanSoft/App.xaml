<Application x:Class="ResturantDewanSoft.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:ResturantDewanSoft"
			 StartupUri="MainWindow.xaml">
	<Application.Resources>






		<Style TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Height" Value="35" />
			<Setter Property="SeparatorBrush" Value="#676FA3" />
			<Setter Property="FontWeight" Value="Black" />
			<Setter Property="Template">

				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Border x:Name="columnHeaderBorder"
		BorderThickness="1"
		Padding="3,0,3,0">
								<Border.BorderBrush>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<GradientStop Offset="0" Color="#A5A5A5" />
										<GradientStop Offset="1" Color="#4B4B4B" />
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<GradientStop Offset="0" Color="#A5A5A5" />
										<GradientStop Offset="1" Color="#D6E5FA" />
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Grid>
					</ControlTemplate>


				</Setter.Value>

			</Setter>


		</Style>


		<Style TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="#FFF8F3" />
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRow}">
						<Border x:Name="DGR_Border"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
							<Border.Background>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<GradientStop Offset="0" Color="#EEF2FF" />
									<GradientStop Offset="1" Color="#CDDEFF" />
								</LinearGradientBrush>
							</Border.Background>
							<SelectiveScrollingGrid>
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter Grid.Column="1"
			ItemsPanel="{TemplateBinding ItemsPanel}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<DataGridDetailsPresenter Grid.Row="1"
			Grid.Column="1"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding 
 AreRowDetailsFrozen,
  ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			  Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
			Visibility="{TemplateBinding DetailsVisibility}" />
								<DataGridRowHeader Grid.RowSpan="2"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
			Visibility="{Binding HeadersVisibility,
ConverterParameter={x:Static DataGridHeadersVisibility.Row},
   Converter={x:Static DataGrid.HeadersVisibilityConverter},
	RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
							</SelectiveScrollingGrid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

















		<Color x:Key="ControlForeground">#181818</Color>
		<Color x:Key="ControlReadOnlyForeground">#383838</Color>
		<Color x:Key="ControlDisabledForeground">#686868</Color>

		<Color x:Key="ControlBackground">#f7f7f9</Color>
		<Color x:Key="ControlHoveredBackground">#fafafc</Color>
		<Color x:Key="ControlFocusedBackground">#fdfdff</Color>
		<Color x:Key="ControlReadOnlyBackground">#f2f2f4</Color>
		<Color x:Key="ControlDisabledBackground">#efeff2</Color>

		<Color x:Key="ControlBorder">#383838</Color>
		<Color x:Key="ControlHoveredBorder">#0BBAE0</Color>
		<Color x:Key="ControlFocusedBorder">#000000</Color>
		<Color x:Key="ControlReadOnlyBorder">#484848</Color>
		<Color x:Key="ControlDisabledBorder">#787878</Color>
		<!-- creating a control template for TextBox -->
		<ControlTemplate x:Key="TextBoxTemplateBase" TargetType="{x:Type TextBox}">
			<Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
				<!-- managing visual states to change controls styles on different states -->
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal">
							<Storyboard>
								<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
											 From="1" To="0"
											 Storyboard.TargetProperty="Opacity"
											 Storyboard.TargetName="hoverBorder"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
											 From="0" To="1"
											 Storyboard.TargetProperty="Opacity"
											 Storyboard.TargetName="hoverBorder"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
														  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBackground}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
														  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBorder}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="ReadOnly">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
														  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBackground}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
														  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBorder}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="FocusStates">
						<VisualState x:Name="Focused">
							<Storyboard>
								<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300"
											 From="0" To="1"
											 Storyboard.TargetProperty="Opacity"
											 Storyboard.TargetName="focusBorder"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unfocused">
							<Storyboard>
								<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.700"
											 From="1" To="0"
											 Storyboard.TargetProperty="Opacity"
											 Storyboard.TargetName="focusBorder"/>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>

				<!-- main border, styling the border-brush and background for Normal state -->
				<Border x:Name="normalBorder" 
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"/>

				<!-- styling border-brush and background-color for MouseOver state -->
				<Border x:Name="hoverBorder" Opacity="0"
					BorderThickness="{TemplateBinding BorderThickness}">
					<Border.BorderBrush>
						<SolidColorBrush Color="{StaticResource ControlHoveredBorder}"/>
					</Border.BorderBrush>
					<Border.Background>
						<SolidColorBrush Color="{StaticResource ControlHoveredBackground}"/>
					</Border.Background>
				</Border>

				<!-- styling border-brush and background-color for Focused state -->
				<Border x:Name="focusBorder" Opacity="0"
					BorderThickness="{TemplateBinding BorderThickness}">
					<Border.BorderBrush>
						<SolidColorBrush Color="{StaticResource ControlFocusedBorder}"/>
					</Border.BorderBrush>
					<Border.Background>
						<SolidColorBrush Color="{StaticResource ControlFocusedBackground}"/>
					</Border.Background>
				</Border>

				<!-- TextBox uses a ScrollViewer named PART_ContentHost as its content-presenter -->
				<ScrollViewer x:Name="PART_ContentHost"
						  Padding="{TemplateBinding Padding}"
						  BorderThickness="0" 
						  IsTabStop="False" 
						  Margin="2" 
						  Background="{x:Null}"
						  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						  TextElement.Foreground="{TemplateBinding Foreground}"/>

			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Color="{StaticResource ControlDisabledForeground}"/>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="IsReadOnly" Value="True">
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Color="{StaticResource ControlReadOnlyForeground}"/>
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>


		<SolidColorBrush x:Key="GotFocusColor" Color="Green" />
		<SolidColorBrush x:Key="LostFocusColor" Color="Transparent" />

		

		<!-- every TextBox with property Style="{StaticResource TextBoxBaseStyle}" will use this style -->
		<Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBox}">
			<Setter Property="Background">
				<Setter.Value>
					<SolidColorBrush Color="{StaticResource ControlBackground}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground">
				<Setter.Value>
					<SolidColorBrush Color="{StaticResource ControlForeground}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="8 4"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<SolidColorBrush Color="{StaticResource ControlBorder}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Template" Value="{StaticResource TextBoxTemplateBase}"/>
		</Style>

		<!-- and if you want to all TextBox `es to use this style, you have to add this line of code: -->
		<Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseStyle}" />
























		<Style TargetType="{x:Type Button}" >
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontFamily" Value="Microsoft YaHei"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
	   <Border Name="bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="5,5,5,5">
							<Border.Background>
								#A6CF98
							</Border.Background>
							<ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseEnter">
								<EventTrigger.Actions>
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation
								  Duration="0:0:0.2" To="#ffff5555" Storyboard.TargetName="bd"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"      />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger.Actions>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave">
								<EventTrigger.Actions>
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation
								  Duration="0:0:0.2" To="#A6CF98" Storyboard.TargetName="bd"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"      />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger.Actions>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
								<!--PreviewMouseDown instead of MouseDown-->
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation
								  Duration="0:0:0.2" To="#ffff3333" Storyboard.TargetName="bd"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"      />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>


						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</Application.Resources>
</Application>
